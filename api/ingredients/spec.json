{
  "openapi": "3.0.1",
  "info": {
    "title": "Ingredients API",
    "description": "Ingredient API is a REST-like API which keeps track of recipe ingredients and is integrated to the internal recipe creation tool (Reseptipankki). This service also integrates to Search API, which provides endpoints for searching default products for ingredients.\r\n\r\nAPI requests are only served over HTTPS, using TLS 1.0, 1.1, and 1.2. Requests will not be honored over plaintext HTTP.\r\n\r\nUse of `accept: application/json` and `content-type: application/json` headers is required when applicable.\r\n\r\nThe API uses UTF-8 character encoding for all responses. Some fields may include characters that are not in the ASCII range.\r\n\r\nAs every other Kesko API service in this hackathon, authentication is accomplished by providing `Ocp-Apim-Subscription-Key` header with your subscription key as the value.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://kesko.azure-api.net/ingredients"
    }
  ],
  "paths": {
    "/ingredients/{id}": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "Get single ingredient by its ID.",
        "description": "Get single ingredient by its ID.",
        "operationId": "get-ingredients-id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of an ingredient.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient.",
            "content": {
              "application/json": { }
            }
          },
          "400": {
            "description": "Invalid input parameter.",
            "content": {
              "application/json": { }
            }
          },
          "500": {
            "description": "Processing error.",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/departments": {
      "get": {
        "tags": [
          "departments"
        ],
        "summary": "List all departments.",
        "description": "Returns list of departments and their order number (in shopping list views etc). Segments belong to departments. The hierarchy of ingredient classification is: <br><br> `Department` > `Segment` > `Ingredient` (or `Product`) <br><br> Usually with products departments aren't used, and they are instead classified by category: <br><br> `Category` > `Subcategory` > `Segment` > `Product`\r\n",
        "operationId": "get-departments",
        "responses": {
          "200": {
            "description": "Segments belong to departments.\r\n",
            "content": {
              "application/json": { }
            }
          },
          "500": {
            "description": "Processing error.",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "ingredients"
        ],
        "summary": "List all ingredients.",
        "description": "Recipes consist of ingredients, and this service keeps track of known recipe ingredients. Ingredients have their unique ID, which is also returned from [Recipe Search API](https://kesko.portal.azure-api.net/docs/services/search/operations/post-search-recipes). <br><br> Most ingredients also belong to some product department, which can be used to classify ingredients into different groups. <br><br> Some ingredients also have one or more default products defined to them as list of EAN codes. These can be used to translate the 'free text' ingredients ('maitoa') into actual products (EAN 6410405069412, 'Pirkka kevytmaito 1l'). The default products are picked from the most common products sold in most of the Kesko stores. *Note*: Search API can also be used to search default products based on incredient IDs (with `ingredientType` filter), and this service should only be used as the source of raw data. <br><br> This endpoint returns quite verbose data, and some kind of caching is encouraged.\r\n",
        "operationId": "get-ingredients",
        "parameters": [
          {
            "name": "queryTerm",
            "in": "query",
            "description": "Search based on matching of queryTerm against ingredient names. Can be used for getting as-you-write suggestions for ingredients.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exactMatch",
            "in": "query",
            "description": "If `true`, queryTerm is compared case-sensitively to the whole ingredient name. If `false`, case insensitive partial matching is used, when comparing `queryTerm` to ingredient names. Default value is `false`.\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of ingredients or an empty list if none were found.\r\n",
            "content": {
              "application/json": { }
            }
          },
          "400": {
            "description": "Invalid input parameter.",
            "content": {
              "application/json": { }
            }
          },
          "500": {
            "description": "Processing error.",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/segments": {
      "get": {
        "tags": [
          "segments"
        ],
        "summary": "List all segments",
        "description": "Returns list of known segments and their the IDs of department they belong to. <br><br> Ingredients (and products) belong to segments. The hierarchy of ingredient classification is: <br><br> `Department` > `Segment` > `Ingredient` (or `Product`) <br><br> Usually with products departments aren't used, and they are instead classified by category: <br><br> `Category` > `Subcategory` > `Segment` > `Product`\r\n",
        "operationId": "get-segments",
        "responses": {
          "200": {
            "description": "List of segments or an empty list if none were found.\r\n",
            "content": {
              "application/json": { }
            }
          },
          "500": {
            "description": "Processing error.",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "subscription-key",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": [ ]
    },
    {
      "apiKeyQuery": [ ]
    }
  ],
  "tags": [
    {
      "name": "departments",
      "description": "Departments"
    },
    {
      "name": "ingredients",
      "description": "Ingredients"
    },
    {
      "name": "segments",
      "description": "Segments"
    }
  ],
  "x-ms-export-notes": [
    "The exported API contains schemas that aren't of content type 'application/vnd.oai.openapi.components+json', and are hence not exported as OpenAPI components."
  ]
}