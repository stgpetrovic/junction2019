openapi: 3.0.1
info:
  title: Ratings API
  description: 'Service which holds ratings of various targets, like recipes.'
  version: '1.0'
servers:
  - url: https://kesko.azure-api.net/ratings
paths:
  '/ratings/{targetNamespace}':
    post:
      tags:
        - ratings
      summary: Create rating.
      description: "The service needs authorId to prevent users from creating more than one rating for same target and also for other restrictions.\r\n"
      operationId: post-ratings-targetnamespace
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      requestBody:
        description: Rating object
        content:
          application/json: { }
      responses:
        '200':
          description: Rating object
          content:
            application/json: { }
    get:
      tags:
        - ratings
      summary: List ratings in a given target namespace.
      description: "List ratings in a given target namespace. If requesting as a service user, unpublished ratings will not be returned.\r\n"
      operationId: get-ratings-targetnamespace
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: targetId
          in: query
          description: "Search based on one or more targetIds. For example requesting targets [1,2] would be *?targetId=1&targetId=2*.\n"
          schema:
            type: array
        - name: authorId
          in: query
          description: Search based on one or more authorIds.
          schema:
            type: array
        - name: authorRole
          in: query
          description: "Search based on one or more authorRoles. **(only for above service role)**\n"
          schema:
            type: array
        - name: category
          in: query
          description: Search based on one or more categories.
          schema:
            type: array
        - name: subCategory
          in: query
          description: Search based on one or more sub categories.
          schema:
            type: array
        - name: hasRating
          in: query
          description: "Search based on if the rating has a numeric rating or not. If `true`, only ratings with a numeric rating are returned.\n"
          schema:
            type: boolean
        - name: hasComment
          in: query
          description: "Search based on if the rating has a comment or not. If true, only ratings with comment are returned.\n"
          schema:
            type: boolean
        - name: replyRequested
          in: query
          description: "Search based on if the rating's author wants a reply for their comment. **(only for above service role)**\n"
          schema:
            type: boolean
        - name: moderated
          in: query
          description: "Search based on if the rating is moderated or not. **(only for above service role)**\n"
          schema:
            type: boolean
        - name: published
          in: query
          description: "Search based on if the rating is published or not. **(only for above service role)**\n"
          schema:
            type: boolean
        - name: sort
          in: query
          description: "Sort based on given field. Format: `attribute:direction`. `direction` is optional, default is **asc**. For example: `createdAt`, `updatedAt:desc`, `updatedAt:asc`.\n"
          schema:
            type: string
        - name: offset
          in: query
          description: "Offset for pagination. Default is **0**.\nWhen using this parameter, specify `limit` explicitly. The defaults might change.\n"
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Limit of returned items. Default is **10**.
          schema:
            type: integer
            default: 10
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      responses:
        '200':
          description: List of ratings or an empty list if none were found.
          content:
            application/json: { }
  '/ratings/{targetNamespace}/{id}':
    delete:
      tags:
        - ratings
      summary: Delete rating.
      description: "**Authorization:** Author x can't delete author y's rating.\r\n"
      operationId: delete-ratings-targetnamespace-id
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Target ID
          required: true
          schema:
            type: string
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json: { }
    get:
      tags:
        - ratings
      summary: Get rating.
      description: "**Note:** Response is cached, but the cache is invalidated if the target's rating is modified in some way: update, delete or new rating. In practice this means that this endpoint returns up-to-date data.\r\n"
      operationId: get-ratings-targetnamespace-id
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Target ID
          required: true
          schema:
            type: string
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      responses:
        '200':
          description: Rating object
          content:
            application/json: { }
    put:
      tags:
        - ratings
      summary: Update rating.
      description: "Body of the request should be a full rating object.\r\n**Note:** `targetNamespace` is being pulled from request body instead of url. That way it's also possible to update `targetNamespace`.\r\n**Authorization:** Author x can't update author y's rating.\r\n**Warning: You must send the full object on each PUT request. Fields which are not sent, will be considered as \"removed\" fields!**\r\n"
      operationId: put-ratings-targetnamespace-id
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Target ID
          required: true
          schema:
            type: string
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      requestBody:
        description: Rating object
        content:
          application/json: { }
      responses:
        '200':
          description: Rating object
          content:
            application/json: { }
  '/rating-summaries/{targetNamespace}':
    get:
      tags:
        - rating-summaries
      summary: List rating summaries in a given target namespace.
      description: "**Notes:**\r\n  * Rating summaries are **updated every 10 minutes.**\r\n  This must be done to keep the endpoint performant enough.\r\n  Use the single rating summary endpoint to return latest data.\r\n  * This endpoint does not send `x-total-count` header.\r\n  * The results are not necessarily in the same order as\r\n  the targetId parameters.\r\n  * There might be less items in the array then requested.\r\n\r\nIf there are a lot of query parameters and the length of the URL gets very long, please consider using the POST version of this API instead.\r\n"
      operationId: get-rating-summaries-targetnamespace
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: targetId
          in: query
          description: "Search based on one or more targetIds. For example requesting targets [1,2] would be *?targetId=1&targetId=2*.\n"
          schema:
            type: array
        - name: category
          in: query
          description: Search based on one or more categories.
          schema:
            type: array
        - name: subCategory
          in: query
          description: Search based on one or more sub categories.
          schema:
            type: array
        - name: sort
          in: query
          description: "Sort based on given field. Format: `attribute:direction`. `direction` is optional. For example: `average`, `distribution.usefulness.5:desc:desc`. Default: `average:asc`.\n"
          schema:
            type: string
            default: average:asc
        - name: offset
          in: query
          description: "Offset for pagination. Default is **0**.\nWhen using this parameter, specify `limit` explicitly. The defaults might change.\n"
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Limit of returned items. Default is **10**.
          schema:
            type: integer
            default: 10
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      responses:
        '200':
          description: "List of rating summaries or an empty list if none were found.\r\n"
          content:
            application/json: { }
    post:
      tags:
        - rating-summaries
      summary: List rating summaries in a given target namespace.
      description: "Exactly the same as `GET /rating-summaries/:targetNamespace` with the exception that parameters which haven't been supplied as query parameters are searched from the body of the request instead. Therefore makes it possible to send longer parameter lists.\r\n"
      operationId: post-rating-summaries-targetnamespace
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: targetId
          in: query
          description: "Search based on one or more targetIds. For example requesting targets [1,2] would be *?targetId=1&targetId=2*.\n"
          schema:
            type: array
        - name: category
          in: query
          description: Search based on one or more categories.
          schema:
            type: array
        - name: subCategory
          in: query
          description: Search based on one or more sub categories.
          schema:
            type: array
        - name: sort
          in: query
          description: "Sort based on given field. Format: `attribute:direction`. `direction` is optional. For example: `average`, `distribution.usefulness.5:desc:desc`. Default: `average:asc`.\n"
          schema:
            type: string
            default: average:asc
        - name: offset
          in: query
          description: "Offset for pagination. Default is **0**.\nWhen using this parameter, specify `limit` explicitly. The defaults might change.\n"
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: Limit of returned items. Default is **10**.
          schema:
            type: integer
            default: 10
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      responses:
        '200':
          description: "List of rating summaries or an empty list if none were found.\r\n"
          content:
            application/json: { }
  '/targets/{targetNamespace}':
    get:
      tags:
        - targets
      summary: Lists all targets currently in the database.
      description: Lists all targets currently in the database.
      operationId: get-targets-targetnamespace
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: "Offset for pagination. Default is **0**.\nWhen using this parameter, specify `limit` explicitly. The defaults might change.\n"
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          description: "Limit of returned items. By default, there is no limit as we need all targets in the UI.\n"
          schema:
            type: integer
        - name: sort
          in: query
          description: "Sort based on given field. Format: `attribute:direction`. `direction` is optional, default is **asc**. For example: `createdAt`, `updatedAt:desc`, `updatedAt:asc`.\n"
          schema:
            type: string
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      responses:
        '200':
          description: "List of targets or an empty list if none were found.\r\n"
          content:
            text/csv: { }
  '/rating-summaries/{targetNamespace}/{targetId}':
    get:
      tags:
        - rating-summaries
      summary: Return single rating summary.
      description: "**Note:** Summary for single is cached but the cache is invalidated if the target's rating is modified in some way: update, delete or new rating. In practice this means that this endpoint returns up-to-date data.\r\n"
      operationId: get-rating-summaries-targetnamespace-targetid
      parameters:
        - name: targetNamespace
          in: path
          description: Target namespace
          required: true
          schema:
            type: string
        - name: targetId
          in: path
          description: Target ID
          required: true
          schema:
            type: string
        - name: x-ip-address
          in: header
          description: "Tells the original requester's IP address to this API. It is needed for moderation purposes. Explained more in [the IP addresses section of the API documentation](../docs/API#ip-addresses).\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
        - name: x-author-id
          in: header
          description: "**Warning:** this ID should be SAME across all services using this rating service.\nTells the original requester's user ID. This is used to restrict some actions. For example author with ID `265` should not be able to modify rating created by user with ID `318`.\nThis value is important and should always be included, but isn't strictly required by the API.\n"
          schema:
            type: string
      responses:
        '200':
          description: "Rating found\r\n"
          content:
            application/json: { }
        '404':
          description: "No ratings have been created for the target. *The behavior is unfortunate but rating service doesn't know any of the targets before the first rating is given for them.*\r\n"
          content:
            application/json: { }
  /health:
    get:
      tags:
        - health
      summary: Simple health check.
      description: Simple health check.
      operationId: get-health
      responses:
        '200':
          description: Confirmation
          content:
            application/json: { }
components:
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: health
    description: Health check
  - name: rating-summaries
    description: Rating summaries
  - name: ratings
    description: Ratings
  - name: reports
    description: Reports
  - name: session
    description: Session
  - name: settings
    description: Settings
  - name: spam-reports
    description: Spam reports
  - name: targets
    description: Targets
  - name: userdata
    description: GDPR user data
x-ms-export-notes:
  - 'The exported API contains schemas that aren''t of content type ''application/vnd.oai.openapi.components+json'', and are hence not exported as OpenAPI components.'